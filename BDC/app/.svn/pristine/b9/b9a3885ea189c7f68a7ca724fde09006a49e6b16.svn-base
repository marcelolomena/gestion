package services

import scala.Option.option2Iterable
import org.apache.commons.lang3.StringUtils
import anorm._
import anorm.sqlToSimple
//import anorm.toParameterValue
import models.DocumentMaster
import models.VersionDetails
import play.Play
import play.api.Play.current
import play.api.db.DB
import models.CustomColumns
import SqlParser._
import scala.util.control.Exception._
import play.i18n.Lang
import play.i18n.Messages
import models.SpiCpiCalculations

object SpiCpiCalculationsService extends CustomColumns {

  val langObj = new Lang(Lang.forCode("es-ES"))

  def findCalculationsById(id: String): Seq[SpiCpiCalculations] = {
    DB.withConnection { implicit connection =>
      val result = SQL(
        "select * from art_ind where pid={id}").on(
          'id -> id).as(
            SpiCpiCalculations.spiCpiCalculations *)
      result
    }
  }

  def findCalculationsForDashboard(program_id: String): Option[SpiCpiCalculations] = {
    DB.withConnection { implicit connection =>
      val result = SQL(
        "select *  from art_ind ind where pid={program_id} and fecha = (select max(fecha) fecha from art_ind ind where pid={program_id})").on(
          'program_id -> program_id).as(
            SpiCpiCalculations.spiCpiCalculations.singleOpt)
      result
    }
  }

  def findCalculationsBySubtaskId(subtask_id: String): Seq[SpiCpiCalculations] = {
    DB.withConnection { implicit connection =>
      val result = SQL(
        "select * from art_sub_task_indicators where subtask_id={id}").on(
          'id -> subtask_id).as(
            SpiCpiCalculations.spiCpiCalculations *)
      result
    }
  }

}