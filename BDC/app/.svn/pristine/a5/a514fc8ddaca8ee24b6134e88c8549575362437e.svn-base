package models
import com.mongodb.casbah.Imports._
import com.mongodb.casbah.MongoCollection
import com.mongodb.casbah.MongoConnection
import com.mongodb.DBObject
import play.api.Play.current
import play.api.PlayException
import java.util.Date
import anorm.SqlParser._
import anorm._
import services.ActivityLogServices

trait MongoDBConnection {

  def getConnection(): com.mongodb.casbah.MongoCollection = {
    MongoClient("localhost")("art_activity")("logs")
  }

  def createLogObject(activityLog: Activity) = {

    var builder = MongoDBObject.newBuilder
    builder += "activity_type" -> activityLog.activity_type
    builder += "message" -> activityLog.message
    builder += "created_at" -> activityLog.created_at
    builder += "user_id" -> activityLog.user_id
    builder += "ref_id" -> activityLog.refId

    val newObj = builder.result
    newObj

  }

}

case class Activity(activity_type: Int, message: String, created_at: Date, user_id: Int, refId: Int)

object Activity extends MongoDBConnection {

  val activityLog = {
    get[Int]("activity_type") ~
      get[String]("message") ~
      get[Date]("created_at") ~
      get[Int]("user_id") ~
      get[Int]("refId") map {
        case activity_type ~ message ~ created_at ~ user_id ~ refId =>
          Activity(activity_type, message, created_at, user_id, refId)
      }

  }

  def saveLog(activity: Activity) = {
    /*   val objSave = createLogObject(activity)
    if (objSave != null) {
      //getConnection.save(objSave)
    }*/

   // ActivityLogServices.saveActivityLogServices(activity)
  }

  def getActivityLogs() {

  }
}

object ActivityTypes extends Enumeration {
  type ActivityTypes = Value
  val Program, Project, Task, SubTask, User, Login, Allocation, Timesheet, Risk, Issue, Document, Estimation_Cost, Program_Planned_Hrs, Project_Planned_Hrs, Program_Member, Generic_Project_Type, Generic_Task_Type, Predefined_Task_Type, Division, Gerencia, Department, Program_Type, Sub_Type, Task_Discipline, User_Role, Stage, Deliverable, Document_Type, Budget_Type, Service_Catalogue, Program_Sap, Project_Sap, UserSkills, Project_Workflow_Status = Value
}
