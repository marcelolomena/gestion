@(documents : Seq[DocumentMaster],taskDetail: Option[models.SubTasks], baselineAvailable : Boolean)(implicit session: play.api.mvc.Session,lang:Lang, req : play.api.mvc.RequestHeader) 
@import helper._
@import services._ 
@import utils._
@import java.math.BigInteger;
@import java.util.Date;
@import java.text.DecimalFormat;
@import org.apache.commons.lang3.StringUtils
@frontend.layout()
<link rel="stylesheet" href="@routes.Assets.at("frontend/stylesheets/timesheet.css")">
<link rel="stylesheet" href="@routes.Assets.at("frontend/stylesheets/jquery-ui.css")">
</head>
<body>
@frontend.topLayout()
<div class="main">
@frontend.header()
<section class="timesheet-section" id="sub-task-detail">
 <div clas="width_full"> 
 
	<h3 class="parent-new-h3 sub-task-h3">
	    <span class="parent-icon"> &lt; </span>
		  <a href="javascript:history.back(-1)">
		  	<span class="left" style="font-weight: bold;">Volver</span>
	  	  </a>
  	   
	</h3>
	<span class="left font13px" style="width:930px; background-color: #f3f4f5; line-height: 27px;  color: #55b9d9;font-weight: bold">Detalle de Sub Tarea</span>
		  
</div>
<div class="timesheet-details">
	
	<div class="width_full" id="subtask_div_change_id">
		
		<div class="team_sub_task_div team_task_div_change "   style="width:925px; border: 2px solid #bfe1ec;min-height: none !important ;">

		<div class="design_team_left_detail_1  padding-none" style="width:910px">
			<input type="hidden" id="m_id" value="@taskDetail.get.task_id" />
			<input type="hidden" id="sub_task_id" value="@taskDetail.get.sub_task_id.get" />
			<table id="subtask-details">
			<tbody>
			<tr>
				<td class="timesheet-th-header">@Messages("taskDetails.title")</td>
				<td>@taskDetail.get.task </td>
			</tr>
			<tr>
				<td class="timesheet-th-header">@Messages("taskDetails.description")</td>
				<td>@taskDetail.get.task_Details </td>
			</tr>
			<tr>
				<td class="timesheet-th-header left">@Messages("taskDetails.plannedStartDate")</td>
				<td class="left">@taskDetail.get.plan_start_date.format("dd-MM-yyyy") </td>
				
				<td class="timesheet-th-header left" style="margin-left: 365px;">Fecha de inicio real</td>
				<td class="left">
					@if(SubTaskServices.findActualStartDateForSubTask(taskDetail.get.sub_task_id.get.toString()) != null){@SubTaskServices.findActualStartDateForSubTask(taskDetail.get.sub_task_id.get.toString()).get.format("dd-MM-yyyy")}else{NA}
				</td>
			</tr>
			<tr>
				<td class="timesheet-th-header left">@Messages("taskDetails.plannedenddate")</td>
				<td class="left">@taskDetail.get.plan_end_date.format("dd-MM-yyyy") </td>
				
				<td class="timesheet-th-header left" style="margin-left: 365px;">Fecha TÃ©rmino Real</td>
				<td class="left">
					@if(SubTaskServices.findActualEndDateForSubTask(taskDetail.get.sub_task_id.get.toString()) != null){@SubTaskServices.findActualEndDateForSubTask(taskDetail.get.sub_task_id.get.toString()).get.format("dd-MM-yyyy")}else{NA}
				</td>
			</tr>
			@*<tr>
				<td class="timesheet-th-header">Fecha de inicio real</td>
				<td>
					<input type="text" style="color: #6b6b6b;" disabled="disabled" value="@if(SubTaskServices.findActualStartDateForSubTask(taskDetail.get.sub_task_id.get.toString()) != null){@SubTaskServices.findActualStartDateForSubTask(taskDetail.get.sub_task_id.get.toString()).get.format("dd-MM-yyyy")}else{NA}" min="0" maxlength="11" readonly="readonly" class="planned_hours" />
				</td>
			</tr>*@
			
			
			<tr>
				<td class="timesheet-th-header">@Messages("addSubTask.completionper")</td>
				<td>
					@taskDetail.get.completion_percentage %
				</td>
			</tr>
			
	
				<td class="timesheet-th-header">@Messages("addDepartment.projectworkflowstatus")</td>
				<td>
					@{
						if(!taskDetail.isEmpty){
							taskDetail.get.status match{
								case 0 => <span class='status_0 ' style='height:20px;width:20px'></span>	
								case 1 => <span class='status_1 ' style='height:20px;width:20px' ></span>	
								case 2 => <span class='status_2 '  style='height:20px;width:20px'></span>	
							}
						}else{
							<span class='status_0 ' style='height:20px;width:20px'></span>
						}
					
					}
				</td>
			</tr>
			
		
			

			<tr>
				<td class="timesheet-th-header left">@Messages("taskDetails.subtaskdependancy")</td>
				<td>
					@if(!taskDetail.get.sub_task_depend.isEmpty) {
			 			@for(s <- taskDetail.get.sub_task_depend.get.split(",")) {
			 				@if(!StringUtils.isBlank(s.trim())){
			 					<div class="width_full">
			 						@if(!SubTaskServices.findSubTasksBySubTaskId(s).isEmpty){
			 							@SubTaskServices.findSubTasksBySubTaskId(s).get.title
			 						}
			 						</div>
							}			
						}
					}else{
						None
					}
				</td>
			</tr>
			

			
			</tbody>
			</table>
   	   </div>
   	   
<h3 class="layer-title" style="margin-top: 20px;line-height: 15px;  padding: 7px 0 0 !important; width: 100%;">
    <span class="left">@Messages("subtaskdetail.subtaskrisk")</span>
</h3>
<div class="program-div" id="new-risk">
	<span><a href="@controllers.Frontend.routes.Risks.riskManagement(taskDetail.get.sub_task_id.get.toString,riskParentType.SubTask.id)"> @Messages("programdetails.addrisk")</a></span>
</div>
<div class="width_full">
	@frontend.risks.riskListing(taskDetail.get.sub_task_id.get.toString(),riskParentType.SubTask.id)
</div> 



<h3 class="layer-title" style="margin-top: 20px;line-height: 15px;  padding: 7px 0 0 !important; width: 100%;">
    <span class="left">@Messages("subtaskdetail.subtaskissue")</span>
</h3>
<div class="program-div" id="new-issue">
	<span><a href="@controllers.Frontend.routes.Program.issueManagement(taskDetail.get.sub_task_id.get.toString,riskParentType.SubTask.id)"> @Messages("subtask.addissue")</a></span>
</div>

<div class="width_full">
	@frontend.task.issueListing(taskDetail.get.sub_task_id.get.toString(),riskParentType.SubTask.id)
</div> 

 @if( utils.UserAccess.checkAccess(req,"project_gantt")){
	  	 <h3 id="productNm_earnedvalueanalysis" style="margin-top: 20px">
		    <span class="left"> @Messages("programDetails.earnedvalueanalysis")  </span>
		 </h3>
		<div class="width_full" id="earn-value">
		     <div id="container_id" style="height: 300px;"> </div>
		    <div id="container_2" style="height: 300px;"> </div>
		 @*   <div id="container_3" style="height: 300px;"> </div>*@
		</div>
	}else{
		 <div class="width_full" id="earn-value" style="display: none;">

	          <div id="container_id" style="height: 300px;"></div>
	 		  <div id="container_2" style="height: 300px;"></div>
	 		@*  <div id="container_3" style="height: 300px;"></div>*@
		 </div>
	 	 <div class="project_list project-list-none">
			<p>@Messages("programDetails.noprojectsavailable") </p>
		</div>
	}		
		
<div id="sub_task_doc_list ">
<div style="margin-top:25px;" class="width_full">
				
				@if(utils.UserAccess.checkAccess(req,"sub_task_document_upload")){
					<a href='@controllers.Frontend.routes.Documents.uploadDocument(taskDetail.get.sub_task_id.get.toString, "TIME", "ADD")'><span class="upload-document-icon">@Messages("uploaddocument.uploaddocument")</span></a>
				}
				
					@if( utils.UserAccess.checkAccess(req,"sub_task_book_time")){
					<a href='@controllers.Frontend.routes.TimeSheet.bookTime(taskDetail.get.sub_task_id.get.toString)'><span class="upload-document-icon">@Messages("programdetails.booktime")</span></a>	
				}
				
		  </div>
		
<div style="float: left; height: auto; overflow: hidden;" class="product_main" id="timesheet_doc_list_id">
		  <div id="p_page" class="subtask_doc_list">
			     <div class="width_full" id="project_task_list">
			  <div class="team_sub_task_div ">
<div class="width_full"> 		
		  <div id="docuement-overview">
		  	<div  class="document-right">
		  		<div class="timesheet-doc_listing">
					@if(documents.size > 0){	
						<h2> @Messages("document.currentsdocuments")</h2>
						<div id="current_documents">
							<ul class="width_full">
								<li>
									<span class="doc_title bold">@Messages("document.documenttitle")</span> 
									<span class="doc_version bold"> @Messages("document.version") </span>
									<span class="doc_date bold">@Messages("document.dateofupload") </span> 
									<span class="doc_user bold">  @Messages("document.uploadedby")</span> 
									<span class="doc_action bold"> @Messages("document.action")</span>
								</li>
								
									@for(doc <- documents){
										<li>
											<span class="doc_title">@doc.title</span> 
											<span class="doc_version">@DocumentService.findAllCurrentVersions(doc.Id.toString()).get.version_alias</span>
											<span class="doc_date"> @DocumentService.findAllCurrentVersions(doc.Id.toString()).get.creation_date.format("dd/MM/YYYY")</span> 
											<span class="doc_user">@UserService.findUserDetailsById(DocumentService.findAllCurrentVersions(doc.Id.toString()).get.user_id.toLong).get.first_name @UserService.findUserDetailsById(DocumentService.findAllCurrentVersions(doc.Id.toString()).get.user_id.toLong).get.last_name</span>
											<span class="doc_action"> 
												<span class="doc_info" title="@DocumentService.findAllCurrentVersions(doc.Id.toString()).get.version_notes"></span>
												<a href='/documents/@DocumentService.findAllCurrentVersions(doc.Id.toString()).get.file_name' target='_blank'><span class="doc_view" title="Click to download the document."></span></a>
												<a href='@controllers.Frontend.routes.Documents.uploadDocument(doc.Id.toString(), "SUBTASK", "UPDATE")'><span class="doc_edit" title="Click to uplaod the new version of the document."></span> </a>
												<a href='@controllers.Frontend.routes.Documents.documentDelete(doc.Id.toString())' class="delete-doc-subtask @doc.Id.toString()"><span class="doc-delete" title="Delete Document"></span></a>
											</span>
										</li>
									}
							</ul>
						</div>
					
						<h2 class="left push-top20px">@Messages("document.previoussdocuments")</h2>
						<div id="previous_documents">
							<ul class="width_full">
								<li>
								<span class="doc_title bold">@Messages("document.documenttitle")</span> 
									<span class="doc_version bold"> @Messages("document.version") </span>
									<span class="doc_date bold">@Messages("document.dateofupload") </span> 
									<span class="doc_user bold">  @Messages("document.uploadedby")</span> 
									<span class="doc_action bold"> @Messages("document.action")</span>
								</li>
								@for(doc <- documents){
									@if(!DocumentService.findAllPreviousVersionDocuments(doc.Id.toString()).isEmpty){
										@for(version <- DocumentService.findAllPreviousVersionDocuments(doc.Id.toString())){
											<li>
												<span class="doc_title">@doc.title</span> 
												<span class="doc_version">@version.version_alias</span>
												<span class="doc_date"> @version.creation_date.format("dd/MM/YYYY")</span> 
												<span class="doc_user">@UserService.findUserDetailsById(version.user_id.toLong).get.first_name </span>
												<span class="doc_action"> 
													<span class="doc_info" title="@version.version_notes"></span>
													<a href='/documents/@version.file_name' target='_blank'><span class="doc_view" title="Click to download the document"></span></a> 
												</span>
											</li>
										}
									}
								}
							</ul>
						</div>
					}else {
						<h2 class="left  no-document">  @Messages("document.nodocumentavailableforselected") @Messages("addSubTask.subtasktitle")</h2>
					}
				</div>
		  	</div>
		  </div>
		  </div>
		  </div>
		  </div>
		  </div>
		  </div>
</div>
	

	</div>
	
	</div>
	
	
	@* <div id="timesheet-details">
		<div class="left-panel">
			<h3 style="">Current Sub Tasks </h3>
			<ul>
				@for((c,index) <- currentSubTasks.zipWithIndex){
					<li class="@if(index%2==0){odd-records}else{even-records}">@c.task </li>	
				}
				
			</ul>
		</div>
		<div class="right-panel">
			<h3 style="">Upcoming Sub Tasks </h3>
			<ul>
				@for((c,index) <- futureSubTasks.zipWithIndex){
					<li class="@if(index%2==0){odd-records}else{even-records}">@c.task </li>	
				}
				
			</ul>
		</div>
	
	</div> *@
	
</div>


	
	@frontend.footer()
</section>
  <div id="dialog-confirm"></div> 
  	<div id="pop-box-over" class="display-none"> 
  	</div>
   
</div>
@frontend.headerScripts()
<script src="@routes.Assets.at("frontend/js/highcharts.js")"></script>
<script type="text/javascript" src="@routes.Assets.at("frontend/js/main.js")"></script>
<script type="text/javascript" src="@routes.Assets.at("frontend/js/documents.js")"></script>

</script>
<script type="text/javascript">
	$(document).ready(function() {
		$(".delete-issue").on("click", renderDeleteIssue);
		$(".delete-doc-subtask").on("click", deleteDocumentSubtask);

		 @if( utils.UserAccess.checkAccess(req,"project_gantt")){
				var url ="/get-spi-graph-subtask?subtask_id=@taskDetail.get.sub_task_id.get.toString()";
				$.get(url, function(data) {
				 var json_var = $.parseJSON(data);
				 
				    if("empty_object" === json_var.empty_object){
				         $("#container_id").hide();
				          $("#container_2").hide();
				           $("#productNm_earnedvalueanalysis").hide();
				    }else{
				 
				  var json_data = json_var.spi_date_map
				  var json_data2 = json_var.cpi_date_map
				  var json_data6 = json_var.ecpi_date_map
				  var json_data7 = json_var.espi_date_map
				  
				  var json_data3 = json_var.actual_cost_map
				   var json_data4 = json_var.earn_value_map
				   var json_data5 = json_var.planned_value_map
				  
				   var json_data8 = json_var.e_actual_cost_map
				   var json_data9 = json_var.e_earn_value_map
				   var json_data10 = json_var.inc_planned_value_map 
				  
				   var programIdMap = json_var.program_id
				   
				   
				  var items = [];
				  var items2 = [];
				  var items3 = [];
				  
				  var items4 = [];
				  var items5 = [];
				  
				  var items6 = [];
				  var items7 = [];
				  var items8 = [];
				  
				  var items9 = [];
				  var items10 = [];
				  
				  
				  var items11 = [];
		
				  
		
				  
				  for (x in json_data6) {
						 var date = x
						 var d = new Date(parseInt(date));
						 items6.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data6[x]]);
						 items6.sort(function(a, b){
										    if (a < b) return -1;
										    if (b < a) return 1;
										    return 0;
										});
					}
				  
				  for (x in json_data7) {
						 var date = x
						 var d = new Date(parseInt(date));
						 items7.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data7[x]]);
						 items7.sort(function(a, b){
										    if (a < b) return -1;
										    if (b < a) return 1;
										    return 0;
										});
					}
				  
				  for (x in json_data8) {
						 var date = x
						 var d = new Date(parseInt(date));
						 items8.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data8[x]]);
						 items8.sort(function(a, b){
										    if (a < b) return -1;
										    if (b < a) return 1;
										    return 0;
										});
					}
				  
				  for (x in json_data9) {
						 var date = x
						 var d = new Date(parseInt(date));
						 items9.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data9[x]]);
						 items9.sort(function(a, b){
										    if (a < b) return -1;
										    if (b < a) return 1;
										    return 0;
										});
					}
				  
				  for (x in json_data10) {
						 var date = x
						 var d = new Date(parseInt(date));
						 items10.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data10[x]]);
						 items10.sort(function(a, b){
										    if (a < b) return -1;
										    if (b < a) return 1;
										    return 0;
										});
					}
				  
	       		 for (x in json_data5) {
					 var date = x
					 var d = new Date(parseInt(date));
					 items5.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data5[x]]);
					 items5.sort(function(a, b){
									    if (a < b) return -1;
									    if (b < a) return 1;
									    return 0;
									});
				}
				  
				for (x in json_data4) {
					 var date = x
					 var d = new Date(parseInt(date));
					 items4.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data4[x]]);
					 items4.sort(function(a, b){
									    if (a < b) return -1;
									    if (b < a) return 1;
									    return 0;
									});
				} 
				  
				  for (x in json_data3) {
					 var date = x
					 var d = new Date(parseInt(date));
					 items3.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data3[x]]);
					 items3.sort(function(a, b){
									    if (a < b) return -1;
									    if (b < a) return 1;
									    return 0;
									});
				  }
				  
				for (x in json_data2) {
					 var date = x
					 var d = new Date(parseInt(date));
					 items2.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data2[x]]);
					 items2.sort(function(a, b){
									    if (a < b) return -1;
									    if (b < a) return 1;
									    return 0;
									});
				} 
				  
				 for (x in json_data) {
					 var date = x
					 var d = new Date(parseInt(date));
					 items.push([Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()),json_data[x]]);
					 items.sort(function(a, b){
									    if (a < b) return -1;
									    if (b < a) return 1;
									    return 0;
									});
				}
				
				 
		
				 
				
					Highcharts.setOptions({ // This is for all plots, change Date axis to local timezone
						global : {
							useUTC : false
						},
					
						 chart: {
					            backgroundColor: {
					                linearGradient: [0, 0, 500, 500],
					                stops: [
					                    [0, 'rgb(255, 255, 255)'],
					                    [1, 'rgb(240, 240, 255)'],
					                    [2, 'rgb(68, 11, 182)'],
					                    [3, 'rgb(11, 182, 176)']
					                    ]
					            },
					           // borderWidth: 2,
					            plotBackgroundColor: 'rgba(255, 255, 255, .9)',
					           // plotShadow: true,
					            plotBorderWidth: 1
					        }
					});
					var chart = new Highcharts.Chart({
						chart : {
							renderTo : 'container_id',
							zoomType : 'xy'
						},
						title: {
					            text: 'SPI CPI Chart'
					    },
						xAxis : {
							type : 'datetime'
						},yAxis: {
				            title: {
				                text: 'values'
				            }
				        },
						series : [ {
						 	name: 'SPI  ',
							data : items
						}, {
			            	name: 'CPI ',
			            	data: items2
					 	},{
				            name: 'ECPI ',
				            data: items6
					 	},{
				            name: 'ESPI ',
				            data: items7
					 	}]

					});
					
					
					
					
					var chart_2 = new Highcharts.Chart({

						chart : {
							renderTo : 'container_2',
							zoomType : 'xy'
						},
							   title: {
					            text: 'Earn Value Chart'
					        },

						xAxis : {
							type : 'datetime'
						},yAxis: {
				            title: {
				                text: 'values'
				            }
				        },
						series : [ {
							name: 'Actual Cost',
							data : items3
						}, {
			            	name: 'EV',
			            	data: items4
					 	} ,{
					 		name :'PV',
					 		data: items5
					 	},{
					 		name :'PVINC',
					 		data: items10
					 	}
					 ,{
					 		name :'EEV',
					 		data: items9
					 	}]

					});
				 }
					});//ajax get end
				
			}	
	});
</script>
</body>
</html>
