package models

import anorm.Pk
import java.util.Date
import anorm.SqlParser._
import play.api.Play.current
import java.util.Date
import anorm._
import play.api.db.DB

case class DashboardSearch(delay_level: Option[String], project_classification: Option[String], program_type: Option[String], program_sub_type: Option[String],division: Option[String],  program_role: Option[String], item_budget: Option[String],  sort_type: Option[String])

object DashboardSearch {
  val dashboardSearch = {
    get[Option[String]]("delay_level") ~
      get[Option[String]]("project_classification") ~
      get[Option[String]]("program_type") ~
       get[Option[String]]("program_sub_type")~
       get[Option[String]]("division") ~
       get[Option[String]]("program_role")~
       get[Option[String]]("item_budget") ~ 
       get[Option[String]]("sort_type") map {
        case delay_level ~ project_classification ~ program_type~ program_sub_type ~ division ~ program_role ~  item_budget ~ sort_type
        => DashboardSearch(delay_level, project_classification, program_type, program_sub_type, division, program_role, item_budget, sort_type)
      }
  }
}

object delayLevelValues extends Enumeration {
  type delayLevelValues = Value
  val OnTime = Value("0 - 0.7")
  val LessThankOneMonth = Value("0.7 - 0.9")
  val LessThanOrEqualTwoMonths = Value("0.9 - 1.0")
  val LessThanTwoMonths = Value(">= 1.0")
  
}

object projectClassificationValues extends Enumeration {
  type projectClassificationValues = Value
  val Small = Value("Small ( < 1.350 UF)")
  val Medium = Value("Meduim (>= 1.350 UF and < 12.500 UF")
  val Large = Value("Large(>= 12.500 UF)")
}

object programRolesValue extends Enumeration {
  type documentTypeValue = Value
  val Program, Projects, Task, SubTask, Division = Value
}

object itemBudgetValue extends Enumeration {
  type itemBudgetValue = Value
  val Infrastructure = Value("Infrastructure")
  val Corrective = Value("Corrective")
  val Evolutionar = Value("Evolutionar")
  val Regulatory = Value("Regulatory")
  val Audit = Value("Audit")
  val ATM = Value("ATM")
  val MinorProjects = Value("Minor Projects")
}