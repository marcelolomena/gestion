{"version":3,"sources":["pages/table-demo.js"],"names":["tableDemo","init","this","bindUIActions","handleSelecter","self","$","document","on","isChecked","prop","getSelectedInfo","$selectors","$selectedRow","length","$info","$badge","addClass","text","remove","prepend","clearSelectedRows","trigger"],"mappings":"aAGA,IAAMA,UAAY,CAEhBC,KAFgB,WAIdC,KAAKC,iBAIPA,cARgB,WAWdD,KAAKE,kBAGPA,eAdgB,WAed,IAAMC,EAAOH,KAEbI,EAAEC,UAAUC,GAAG,SAAU,gBAAiB,WACxC,IAAMC,EAAYH,EAAEJ,MAAMQ,KAAK,WAC/BJ,EAAE,+BAA+BI,KAAK,UAAWD,GAGjDJ,EAAKM,oBAENH,GAAG,SAAU,8BAA+B,WAC3C,IAAMI,EAAaN,EAAE,+BACfO,EAAeP,EAAE,uCAAuCQ,OACxDJ,EAAOG,IAAiBD,EAAWE,OACrC,UACA,gBAGJR,EAAE,iBACCI,KAAK,iBAAiB,GACtBA,KAAK,WAAW,GAEfG,GACFP,EAAE,iBAAiBI,KAAKA,GAAM,GAIhCL,EAAKM,qBAITA,gBA7CgB,WA8Cd,IAAME,EAAeP,EAAE,uCAAuCQ,OACxDC,EAAQT,EAAE,cACVU,EAASV,EAAE,WACdW,SAAS,qCACTC,KAAQL,EAFI,aAIfP,EAAE,sBAAsBa,SAEpBN,GACFE,EAAMK,QAAQJ,IAIlBK,kBA3DgB,WA4Ddf,EAAE,iBACCI,KAAK,iBAAiB,GACtBA,KAAK,WAAW,GAChBY,QAAQ,YAIftB,UAAUC","file":"../../javascript/pages/table-demo.min.js","sourcesContent":["// DataTables Demo\n// =============================================================\n\nconst tableDemo = {\n\n  init () {\n\n    this.bindUIActions()\n\n  },\n\n  bindUIActions () {\n\n    // event handlers\n    this.handleSelecter()\n  },\n\n  handleSelecter () {\n    const self = this\n\n    $(document).on('change', '#check-handle', function () {\n      const isChecked = $(this).prop('checked')\n      $('input[name=\"selectedRow[]\"]').prop('checked', isChecked)\n\n      // get info\n      self.getSelectedInfo()\n    })\n    .on('change', 'input[name=\"selectedRow[]\"]', function () {\n      const $selectors = $('input[name=\"selectedRow[]\"]')\n      const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n      const prop = $selectedRow === $selectors.length\n        ? 'checked'\n        : 'indeterminate'\n\n      // reset props\n      $('#check-handle')\n        .prop('indeterminate', false)\n        .prop('checked', false)\n\n      if ($selectedRow) {\n        $('#check-handle').prop(prop, true)\n      }\n\n      // get info\n      self.getSelectedInfo()\n    })\n  },\n\n  getSelectedInfo () {\n    const $selectedRow = $('input[name=\"selectedRow[]\"]:checked').length\n    const $info = $('.thead-btn')\n    const $badge = $('<span/>')\n      .addClass('selected-row-info text-muted pl-1')\n      .text(`${$selectedRow} selected`)\n    // remove existing info\n    $('.selected-row-info').remove()\n    // add current info\n    if ($selectedRow) {\n      $info.prepend($badge)\n    }\n  },\n\n  clearSelectedRows () {\n    $('#check-handle')\n      .prop('indeterminate', false)\n      .prop('checked', false)\n      .trigger('change')\n  }\n}\n\ntableDemo.init()\n"]}