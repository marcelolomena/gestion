{"version":3,"sources":["pages/profile-demo.js"],"names":["profileDemo","init","this","bindUIActions","Chart","defaults","global","maintainAspectRatio","achievementChart","handleFlatpickr","colors","red","orange","yellow","green","teal","blue","purple","gray","grayLight","grayLighter","getColor","color","randomScalingFactor","Math","round","random","self","data","labels","datasets","label","borderColor","backgroundColor","canvas","$","getContext","type","options","responsive","legend","display","title","tooltips","mode","intersect","scales","xAxes","gridLines","drawBorder","drawOnChartArea","yAxes","ticks","stepSize","flatpickr","inline","disableMobile","dateFormat","next","on","e","stopPropagation"],"mappings":"aAGA,IAAMA,YAAc,CAElBC,KAFkB,WAIhBC,KAAKC,iBAIPA,cARkB,WAUhBC,MAAMC,SAASC,OAAOC,qBAAsB,EAG5CL,KAAKM,mBACLN,KAAKO,mBAGPC,OAjBkB,WAkBhB,MAAO,CACLC,IAAK,UACLC,OAAQ,UACRC,OAAQ,UACRC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,KAAM,UACNC,UAAW,UACXC,YAAa,YAIjBC,SAhCkB,SAgCRC,GACR,OAAOpB,KAAKQ,SAASY,IAGvBC,oBApCkB,WAqChB,OAAO,EAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,WAG/BlB,iBAxCkB,WAyChB,IAAMmB,EAAOzB,KACP0B,EAAO,CACXC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDC,SAAU,CAAC,CACTC,MAAO,cACPC,YAAaL,EAAKN,SAAS,QAC3BY,gBAAiBN,EAAKN,SAAS,QAC/BO,KAAM,CACJD,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,wBAEN,CACDQ,MAAO,kBACPC,YAAaL,EAAKN,SAAS,UAC3BY,gBAAiBN,EAAKN,SAAS,UAC/BO,KAAM,CACJD,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,0BAMLW,EAASC,EAAE,uBAAuB,GAAGC,WAAW,MAC1C,IAAIhC,MAAM8B,EAAQ,CAC5BG,KAAM,MACNT,KAAMA,EACNU,QAAS,CACPC,YAAY,EACZC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,GAClBE,SAAU,CACRC,KAAM,QACNC,WAAW,GAEbC,OAAQ,CACNC,MAAO,CAAC,CACNC,UAAW,CACTP,SAAS,EACTQ,YAAY,EACZC,iBAAiB,KAGrBC,MAAO,CAAC,CACNH,UAAW,CACTP,SAAS,EACTQ,YAAY,EACZC,iBAAiB,GAEnBE,MAAO,CACLC,SAAU,WAQtB5C,gBA7GkB,WA8GhB6C,UAAU,aAAc,CACtBC,QAAQ,EACRC,eAAe,EACfZ,KAAM,QACNa,WAAY,UAGdtB,EAAE,cAAcuB,OAAOC,GAAG,QAAS,SAAUC,GAC3CA,EAAEC,sBAKR7D,YAAYC","file":"../../javascript/pages/profile-demo.min.js","sourcesContent":["// Profile Demo\n// =============================================================\n\nconst profileDemo = {\n\n  init () {\n\n    this.bindUIActions()\n\n  },\n\n  bindUIActions () {\n    // turn off aspect ratio to get better mobile view\n    Chart.defaults.global.maintainAspectRatio = false\n\n    // event handlers\n    this.achievementChart()\n    this.handleFlatpickr()\n  },\n\n  colors () {\n    return {\n      red: '#B76BA3',\n      orange: '#EC935E',\n      yellow: '#F7C46C',\n      green: '#A7C796',\n      teal: '#00A28A',\n      blue: '#346CB0',\n      purple: '#5F4B8B',\n      gray: '#BEC1C4',\n      grayLight: '#D4D5D7',\n      grayLighter: '#F5F5F5'\n    }\n  },\n\n  getColor (color) {\n    return this.colors()[color]\n  },\n\n  randomScalingFactor () {\n    return 1.0 * Math.round(Math.random() * 100)\n  },\n\n  achievementChart () {\n    const self = this\n    const data = {\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      datasets: [{\n        label: 'Total Tasks',\n        borderColor: self.getColor('teal'),\n        backgroundColor: self.getColor('teal'),\n        data: [\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor()\n        ]\n      }, {\n        label: 'Completed Tasks',\n        borderColor: self.getColor('purple'),\n        backgroundColor: self.getColor('purple'),\n        data: [\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor()\n        ]\n      }]\n    }\n\n    // init achievement chart\n    const canvas = $('#canvas-achievement')[0].getContext('2d')\n    let chart = new Chart(canvas, {\n      type: 'bar',\n      data: data,\n      options: {\n        responsive: true,\n        legend: { display: false },\n        title: { display: false },\n        tooltips: {\n          mode: 'index',\n          intersect: true\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: true,\n              drawBorder: false,\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true,\n              drawBorder: false,\n              drawOnChartArea: false\n            },\n            ticks: {\n              stepSize: 20\n            }\n          }]\n        }\n      }\n    })\n  },\n\n  handleFlatpickr () {\n    flatpickr('#flatpickr', {\n      inline: true,\n      disableMobile: true,\n      mode: 'range',\n      dateFormat: 'Y-m-d'\n    })\n\n    $('#flatpickr').next().on('click', function (e) {\n      e.stopPropagation()\n    })\n  }\n}\n\nprofileDemo.init()\n"]}