{"version":3,"sources":["pages/flot-demo.js"],"names":["flotDemo","init","this","bindUIActions","lineChart","barChart","areaChart","horizontalBarChart","combineChart","realtimeChart","handleTooltips","colors","red","orange","yellow","green","teal","blue","purple","gray","grayLight","grayLighter","getColor","color","self","sin","cos","i","push","Math","$","plot","data","label","series","lines","show","points","grid","hoverable","borderWidth","legend","position","xaxis","tickLength","yaxis","min","max","tickSize","tickColor","bars","barWidth","align","fillColor","opacity","mode","year","Date","getTime","america","uerope","dataset","fill","axisLabel","axisLabelUseCanvas","axisLabelFontSizePixels","axisLabelPadding","axisLabelFontFamily","axisLabelColour","timeformat","tickFormatter","v","axis","noColumns","dataSet_barhor","horizontal","lineWidth","ticks","getDate","month","day","wind","pressure","temp","dataset_combine","yaxes","data_realtime","getRandomData","slice","length","y","random","res","flotRealtime","shadowSize","update","setData","draw","setTimeout","appendTo","document","on","event","pos","item","x","datapoint","toFixed","undefined","dataIndex","html","css","top","pageY","left","pageX","fadeIn","hide","getFullYear","borderColor","backgroundColor","date","unit"],"mappings":"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","file":"../../javascript/pages/flot-demo.min.js","sourcesContent":["// Flot Chart Demo\n// =============================================================\n\nconst flotDemo = {\n\n  init () {\n\n    this.bindUIActions()\n\n  },\n\n  bindUIActions () {\n\n    // event handlers\n    this.lineChart()\n    this.barChart()\n    this.areaChart()\n    this.horizontalBarChart()\n    this.combineChart()\n    this.realtimeChart()\n    this.handleTooltips()\n  },\n\n  colors () {\n    return {\n      red: '#B76BA3',\n      orange: '#EC935E',\n      yellow: '#F7C46C',\n      green: '#A7C796',\n      teal: '#00A28A',\n      blue: '#346CB0',\n      purple: '#5F4B8B',\n      gray: '#BEC1C4',\n      grayLight: '#D4D5D7',\n      grayLighter: '#F5F5F5'\n    }\n  },\n\n  getColor (color) {\n    return this.colors()[color]\n  },\n\n  lineChart () {\n    const self = this\n    let sin = []\n    let cos = []\n\n    for (let i = 0; i < 14; i += 0.5) {\n      sin.push([i, Math.sin(i)])\n      cos.push([i, Math.cos(i)])\n    }\n\n    $('#flot-line').plot(\n    [{\n      data: sin,\n      label: 'sin(x)'\n    }, { data: cos,\n      label: 'cos(x)'\n    }],\n    {\n      series: {\n        lines: { show: true },\n        points: { show: true }\n      },\n      colors: [self.getColor('purple'), self.getColor('teal')],\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: self.getColor('gray')\n      },\n      legend: { position: 'se' },\n      xaxis: {\n        tickLength: 0,\n        color: '#686f76'\n      },\n      yaxis: {\n        min: -1.2,\n        max: 1.2,\n        tickSize: 1,\n        tickColor: '#ecf0f1',\n        color: '#686f76'\n      }\n    })\n  },\n\n  barChart () {\n    const self = this\n    const data = [['January', 10], ['February', 8], ['March', 4], ['April', 13], ['May', 17], ['June', 9]]\n\n    $('#flot-bar').plot([data], {\n      series: {\n        bars: {\n          show: true,\n          barWidth: 0.5,\n          align: 'center',\n          fillColor: {\n            colors: [{ opacity: 0.9 }, { opacity: 0.1 }]\n          }\n        }\n      },\n      colors: [self.getColor('teal')],\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: self.getColor('gray')\n      },\n      xaxis: {\n        mode: 'categories',\n        tickLength: 0\n      },\n      yaxis: {\n        tickColor: self.getColor('grayLighter')\n      }\n    })\n  },\n\n  areaChart () {\n    const self = this\n    const year = function (year) {\n      return new Date(year, 1, 1).getTime()\n    }\n    // raw data\n    const america = [\n      [year(1800), 700], [year(1850), 2600], [year(1900), 8200], [year(1950), 17162], [year(1955), 18688],\n      [year(1960), 20415], [year(1965), 21957], [year(1970), 23194], [year(1975), 24343], [year(1980), 25607],\n      [year(1985), 26946], [year(1990), 28355], [year(1995), 29944], [year(2000), 31592], [year(2005), 33216],\n      [year(2010), 34412]\n    ]\n    const uerope = [\n      [year(1800), 20300], [year(1850), 27600], [year(1900), 40800], [year(1950), 54740], [year(1955), 57518],\n      [year(1960), 60140], [year(1965), 63403], [year(1970), 65586], [year(1975), 67554], [year(1980), 69243],\n      [year(1985), 70601], [year(1990), 72158], [year(1995), 72741], [year(2000), 72799], [year(2005), 72472],\n      [year(2010), 72708]\n    ]\n    const asia = [\n      [year(1800), 63500], [year(1850), 80900], [year(1900), 94700], [year(1950), 139849], [year(1955), 154195],\n      [year(1960), 167434], [year(1965), 189942], [year(1970), 214312], [year(1975), 239751], [year(1980), 263234],\n      [year(1985), 288755], [year(1990), 316781], [year(1995), 343005], [year(2000), 367974], [year(2005), 391751],\n      [year(2010), 411963]\n    ]\n    // dataset\n    const dataset = [\n      { label: 'Asia', data: asia, color: self.getColor('purple') },\n      { label: 'Europe', data: uerope, color: self.getColor('teal') },\n      { label: 'North America', data: america, color: self.getColor('blue') }\n    ]\n\n    // init chart\n    $('#flot-area').plot(dataset, {\n      series: {\n        lines: {\n          show: true,\n          fill: true\n        }\n      },\n      xaxis: {\n        tickLength: 0,\n        axisLabel: 'Year',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 10,\n        axisLabelFontFamily: 'Open Sans, sans-serif',\n        axisLabelColour: self.getColor('gray'),\n        mode: 'time',\n        tickSize: [20, 'year'],\n        timeformat: '%Y'\n      },\n      yaxis: {\n        axisLabel: 'Population (multiply by 10,000)',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 3,\n        axisLabelFontFamily: 'Open Sans, sans-serif',\n        axisLabelColour: self.getColor('gray'),\n        tickFormatter: function (v, axis) {\n          return v\n        }\n      },\n      legend: {\n        noColumns: 3,\n        position: 'nw'\n      },\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: self.getColor('gray')\n      }\n    })\n  },\n\n  horizontalBarChart () {\n    const self = this\n    const data_barhor = [\n      [1582.3, 0], //Gold/oz\n      [28.95, 1],  //Silver/oz\n      [1603, 2],   //PLATINUM /oz\n      [774, 3],    //PALLADIUM /oz\n      [1245, 4],   //Rhodium\n      [85, 5],     //Ruthenium\n      [1025, 6]    //Iridium\n    ]\n    const dataSet_barhor = [\n      { label: 'Precious Metal Price', data: data_barhor, color: self.getColor('teal') }\n    ]\n    const ticks_barhor = [\n      [0, 'Gold'], [1, 'Silver'], [2, 'Platinum'], [3, 'Palldium'], [4, 'Rhodium'], [5, 'Ruthenium'], [6, 'Iridium']\n    ]\n\n    // init chart\n    $('#flot-barhor').plot(dataSet_barhor, {\n      series: {\n        bars: {\n          show: true\n        }\n      },\n      bars: {\n        align: 'center',\n        barWidth: 0.5,\n        horizontal: true,\n        fillColor: { colors: [{ opacity: 1 }, { opacity: 1}] },\n        lineWidth: 1\n      },\n      xaxis: {\n        axisLabel: 'Price (USD/oz)',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 10,\n        axisLabelFontFamily: 'Open Sans, sans-serif',\n        axisLabelColour: self.getColor('gray'),\n        tickFormatter: function (v, axis) {\n          return v\n        },\n        max: 2000\n      },\n      yaxis: {\n        axisLabel: 'Precious Metals',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelPadding: 3,\n        axisLabelFontFamily: 'Open Sans, sans-serif',\n        axisLabelColour: self.getColor('gray'),\n        tickLength: 0,\n        ticks: ticks_barhor\n      },\n      legend: {\n        noColumns: 0,\n        position: 'ne'\n      },\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: self.getColor('gray')\n      }\n    })\n  },\n\n  combineChart () {\n    const self = this\n    const getDate = function (year, month, day) {\n      return new Date(year, month - 1, day).getTime()\n    }\n    const wind = [\n      [getDate(2012, 1, 1), 11], [getDate(2012, 1, 2), 9], [getDate(2012, 1, 3), 7], [getDate(2012, 1, 4), 13],\n      [getDate(2012, 1, 5), 11], [getDate(2012, 1, 6), 11], [getDate(2012, 1, 7), 9], [getDate(2012, 1, 8), 10],\n      [getDate(2012, 1, 9), 7], [getDate(2012, 1, 10), 11], [getDate(2012, 1, 11), 7], [getDate(2012, 1, 12), 6],\n      [getDate(2012, 1, 13), 4], [getDate(2012, 1, 14), 5], [getDate(2012, 1, 15), 11], [getDate(2012, 1, 16), 8],\n      [getDate(2012, 1, 17), 9], [getDate(2012, 1, 18), 16], [getDate(2012, 1, 19), 11], [getDate(2012, 1, 20), 18],\n      [getDate(2012, 1, 21), 8], [getDate(2012, 1, 22), 17], [getDate(2012, 1, 23), 11], [getDate(2012, 1, 24), 13],\n      [getDate(2012, 1, 25), 11], [getDate(2012, 1, 26), 11], [getDate(2012, 1, 27), 9], [getDate(2012, 1, 28), 8],\n      [getDate(2012, 1, 29), 7], [getDate(2012, 1, 30), 8], [getDate(2012, 1, 31), 20]\n    ]\n    const pressure = [\n      [getDate(2012, 1, 1), 320], [getDate(2012, 1, 2), 430], [getDate(2012, 1, 3), 540], [getDate(2012, 1, 4), 560],\n      [getDate(2012, 1, 5), 964], [getDate(2012, 1, 6), 1022], [getDate(2012, 1, 7), 436], [getDate(2012, 1, 8), 750],\n      [getDate(2012, 1, 9), 648], [getDate(2012, 1, 10), 639], [getDate(2012, 1, 11), 654], [getDate(2012, 1, 12), 300],\n      [getDate(2012, 1, 13), 739], [getDate(2012, 1, 14), 748], [getDate(2012, 1, 15), 768], [getDate(2012, 1, 16), 1023],\n      [getDate(2012, 1, 17), 869], [getDate(2012, 1, 18), 489], [getDate(2012, 1, 19), 987], [getDate(2012, 1, 20), 980],\n      [getDate(2012, 1, 21), 580], [getDate(2012, 1, 22), 387], [getDate(2012, 1, 23), 345], [getDate(2012, 1, 24), 560],\n      [getDate(2012, 1, 25), 405], [getDate(2012, 1, 26), 876], [getDate(2012, 1, 27), 543], [getDate(2012, 1, 28), 650],\n      [getDate(2012, 1, 29), 600], [getDate(2012, 1, 30), 900], [getDate(2012, 1, 31), 531]\n    ]\n    const temp = [\n      [getDate(2012, 1, 1), 1], [getDate(2012, 1, 2), -2], [getDate(2012, 1, 3), -2], [getDate(2012, 1, 4), 1],\n      [getDate(2012, 1, 5), 3], [getDate(2012, 1, 6), 4], [getDate(2012, 1, 7), 5], [getDate(2012, 1, 8), 6],\n      [getDate(2012, 1, 9), 7], [getDate(2012, 1, 10), 7], [getDate(2012, 1, 11), 6], [getDate(2012, 1, 12), 7],\n      [getDate(2012, 1, 13), 8], [getDate(2012, 1, 14), 8], [getDate(2012, 1, 15), 3], [getDate(2012, 1, 16), 2],\n      [getDate(2012, 1, 17), 4], [getDate(2012, 1, 18), -1], [getDate(2012, 1, 19), 5], [getDate(2012, 1, 20), 6],\n      [getDate(2012, 1, 21), -2], [getDate(2012, 1, 22), -7], [getDate(2012, 1, 23), -9], [getDate(2012, 1, 24), -8],\n      [getDate(2012, 1, 25), -7], [getDate(2012, 1, 26), -6], [getDate(2012, 1, 27), -3], [getDate(2012, 1, 28), 1],\n      [getDate(2012, 1, 29), 6], [getDate(2012, 1, 30), 9], [getDate(2012, 1, 31), 8]\n    ]\n    // dataset\n    const dataset_combine = [\n      {\n        label: 'Sea Level Pressure',\n        data: pressure,\n        color: self.getColor('gray'),\n        bars: {\n          show: true,\n          align: 'center',\n          barWidth: 24 * 60 * 60 * 600,\n          lineWidth:1\n        }\n      }, {\n        label: 'Wind Speed',\n        data: wind,\n        yaxis: 2,\n        color: self.getColor('purple'),\n        points: { fillColor: self.getColor('purple'), show: true },\n        lines: {show:true}\n      }, {\n        label: 'Temperature',\n        data: temp,\n        yaxis: 3,\n        color: self.getColor('teal'),\n        points: { fillColor: self.getColor('teal'), show: true },\n        lines: { show: true }\n      }\n    ]\n\n    // init chart\n    $('#flot-combine').plot(dataset_combine, {\n      xaxis: {\n        mode: 'time',\n        tickSize: [3, 'day'],\n        tickLength: 0,\n        axisLabel: 'Date',\n        axisLabelUseCanvas: true,\n        axisLabelFontSizePixels: 12,\n        axisLabelFontFamily: 'Open Sans, Arial',\n        axisLabelColour: self.getColor('gray'),\n        axisLabelPadding: 10\n      },\n      yaxes: [{\n          position: 'left',\n          max: 1070,\n          axisLabel: 'Sea Level Pressure (hPa)',\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 12,\n          axisLabelFontFamily: 'Open Sans, Arial',\n          axisLabelColour: self.getColor('gray'),\n          axisLabelPadding: 3\n        }, {\n          position: 'right',\n          axisLabel: 'Wind Speed (km/hr)',\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 12,\n          axisLabelFontFamily: 'Open Sans, Arial',\n          axisLabelColour: self.getColor('gray'),\n          axisLabelPadding: 3\n        },{\n          position: 'right',\n          axisLabel: 'Temperature (°C)',\n          axisLabelUseCanvas: true,\n          axisLabelFontSizePixels: 12,\n          axisLabelFontFamily: 'Open Sans, Arial',\n          axisLabelColour: self.getColor('gray'),\n          axisLabelPadding: 3\n        }\n      ],\n      legend: {\n        noColumns: 1,\n        position: 'nw'\n      },\n      grid: {\n        hoverable: true,\n        borderWidth: 0,\n        color: self.getColor('gray')\n      }\n    })\n  },\n\n  realtimeChart () {\n    const self = this\n    const totalPoints = 300\n    const updateInterval = 1000\n    let data_realtime = []\n    const getRandomData = function () {\n      data_realtime = data_realtime.slice(1)\n      // Do a random walk\n      while (data_realtime.length < totalPoints) {\n        let prev = data_realtime.length > 0 ? data_realtime[data_realtime.length - 1] : 50\n        let y = prev + Math.random() * 10 - 5\n\n        if (y < 0) {\n          y = 0\n        } else if (y > 100) {\n          y = 100\n        }\n        data_realtime.push(y)\n      }\n      // Zip the generated y values with the x values\n      let res = []\n      for (let i = 0; i < data_realtime.length; ++i) {\n        res.push([i, data_realtime[i]])\n      }\n      return res\n    }\n    const update = function () {\n      flotRealtime.setData([{ data: getRandomData(), color: self.getColor('teal') }])\n      // Since the axes don't change, we don't need to call plot.setupGrid()\n      flotRealtime.draw()\n      setTimeout(update, updateInterval)\n    }\n\n    // init chart realtime\n    const flotRealtime = $.plot('#flot-realtime', [{ data: getRandomData(), color: self.getColor('teal') }], {\n      series: {\n        lines: {\n          show: true,\n          fill: true\n        },\n        shadowSize: 0   // Drawing is faster without shadows\n      },\n      yaxis: {\n        min: 0,\n        max: 100\n      },\n      xaxis: {\n        show: false\n      },\n      grid: {\n        borderWidth: 0,\n        color: self.getColor('gray')\n      }\n    })\n\n    update()\n  },\n\n  handleTooltips () {\n    // line and bar\n    $('<div id=\"flot-tooltip\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-line, #flot-bar', function (event, pos, item) {\n      if (item) {\n        let x = item.datapoint[0].toFixed(2)\n        let y = item.datapoint[1].toFixed(2)\n        let series = (item.series.label === undefined) ? item.series.data[item.dataIndex][0] : item.series.label + ' of ' + x\n\n        $('#flot-tooltip').html(series + ' = ' + y)\n          .css({ top: item.pageY + 5, left: item.pageX + 5 })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip').hide()\n      }\n    })\n\n    // flot area\n    $('<div id=\"flot-tooltip2\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-area', function (event, pos, item) {\n      if (item) {\n        let x = item.datapoint[0]\n        let y = item.datapoint[1]\n        let color = item.series.color\n\n        $('#flot-tooltip2').html('<strong>' + item.series.label + '</strong><br>' + new Date(x).getFullYear() +\n            ' : <strong>Population : ' + y + '</strong> <br> <em>(multiply by 10,000)</em>')\n          .css({ top: item.pageY + 5, left: item.pageX + 5, borderColor: color, color: '#686f76', backgroundColor: '#ffffff' })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip2').hide()\n      }\n    })\n\n    // barhor\n    $('<div id=\"flot-tooltip3\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-barhor', function (event, pos, item) {\n      if (item) {\n        let x = item.datapoint[0]\n        let y = item.datapoint[1]\n        let color = item.series.color\n\n        $('#flot-tooltip3').html('<strong>' + item.series.label + ': </strong>' + x)\n          .css({ top: item.pageY + 9, left: item.pageX - 100, borderColor: color, color: '#686f76', backgroundColor: '#ffffff' })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip3').hide()\n      }\n    })\n\n    // combine\n    $('<div id=\"flot-tooltip4\" class=\"flot-tooltip\"></div>').appendTo('body')\n    $(document).on('plothover', '#flot-combine', function (event, pos, item) {\n      if (item) {\n        let x = item.datapoint[0]\n        let y = item.datapoint[1]\n        let color = item.series.color\n        let date = 'Jan ' + new Date(x).getDate()\n        let unit = ''\n\n        if (item.series.label == 'Sea Level Pressure') {\n          unit = 'hPa'\n        } else if (item.series.label == 'Wind Speed') {\n          unit = 'km/hr'\n        } else if (item.series.label == 'Temperature') {\n          unit = '°C'\n        }\n\n        $('#flot-tooltip4').html('<strong>' + item.series.label + '</strong><br>' + date + ' : <strong>' + y + '</strong> ' + unit)\n          .css({ top: item.pageY + 5, left: item.pageX + 5, borderColor: color, color: '#686f76', backgroundColor: '#ffffff' })\n          .fadeIn(300)\n      } else {\n        $('#flot-tooltip4').hide()\n      }\n    })\n  }\n}\n\nflotDemo.init()\n"]}