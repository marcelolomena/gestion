{"version":3,"sources":["pages/dashboard-demo.js"],"names":["dashboardDemo","init","this","bindUIActions","Chart","defaults","global","maintainAspectRatio","handleTasksChart","handleFlatpickr","colors","red","orange","yellow","green","teal","blue","purple","gray","getColor","color","colorNames","Object","keys","randomScalingFactor","Math","round","random","self","data","labels","datasets","backgroundColor","borderColor","borderWidth","canvas","$","getContext","type","options","responsive","legend","display","title","scales","xAxes","gridLines","drawBorder","drawOnChartArea","ticks","maxRotation","maxTicksLimit","yAxes","beginAtZero","stepSize","flatpickr","inline","disableMobile","mode","dateFormat","next","on","e","stopPropagation"],"mappings":"aAGA,IAAMA,cAAgB,CAEpBC,KAFoB,WAIlBC,KAAKC,iBAIPA,cARoB,WAUlBC,MAAMC,SAASC,OAAOC,qBAAsB,EAG5CL,KAAKM,mBACLN,KAAKO,mBAGPC,OAjBoB,WAkBlB,MAAO,CACLC,IAAK,UACLC,OAAQ,UACRC,OAAQ,UACRC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,KAAM,YAIVC,SA9BoB,SA8BVC,GACR,OAAOlB,KAAKQ,SAASU,IAGvBC,WAlCoB,SAkCRD,GACV,OAAOE,OAAOC,KAAKrB,KAAKQ,WAG1Bc,oBAtCoB,WAuClB,OAAO,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,WAG7BnB,iBA1CoB,WA2ClB,IAAMoB,EAAO1B,KACP2B,EAAO,CACXC,OAAQ,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UACrEC,SAAU,CAAC,CACTC,gBAAiBJ,EAAKT,SAAS,QAC/Bc,YAAaL,EAAKT,SAAS,QAC3Be,YAAa,EACbL,KAAM,CACJD,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,sBACLI,EAAKJ,0BAKLW,EAASC,EAAE,qBAAqB,GAAGC,WAAW,MACxC,IAAIjC,MAAM+B,EAAQ,CAC5BG,KAAM,MACNT,KAAMA,EACNU,QAAS,CACPC,YAAY,EACZC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,GAClBE,OAAQ,CACNC,MAAO,CAAC,CACNC,UAAW,CACTJ,SAAS,EACTK,YAAY,EACZC,iBAAiB,GAEnBC,MAAO,CACLC,YAAa,EACbC,cAAe,KAGnBC,MAAO,CAAC,CACNN,UAAW,CACTJ,SAAS,EACTK,YAAY,GAEdE,MAAO,CACLI,aAAa,EACbC,SAAU,YAQtB7C,gBAjGoB,WAkGlB8C,UAAU,aAAc,CACtBC,QAAQ,EACRC,eAAe,EACfC,KAAM,QACNC,WAAY,UAGdvB,EAAE,cAAcwB,OAAOC,GAAG,QAAS,SAAUC,GAC3CA,EAAEC,sBAKR/D,cAAcC","file":"../../javascript/pages/dashboard-demo.min.js","sourcesContent":["// Dashboard Demo\n// =============================================================\n\nconst dashboardDemo = {\n\n  init () {\n\n    this.bindUIActions()\n\n  },\n\n  bindUIActions () {\n    // turn off aspect ratio to get better mobile view\n    Chart.defaults.global.maintainAspectRatio = false\n\n    // event handlers\n    this.handleTasksChart()\n    this.handleFlatpickr()\n  },\n\n  colors () {\n    return {\n      red: '#B76BA3',\n      orange: '#EC935E',\n      yellow: '#F7C46C',\n      green: '#A7C796',\n      teal: '#00A28A',\n      blue: '#346CB0',\n      purple: '#5F4B8B',\n      gray: '#BEC1C4'\n    }\n  },\n\n  getColor (color) {\n    return this.colors()[color]\n  },\n\n  colorNames (color) {\n    return Object.keys(this.colors())\n  },\n\n  randomScalingFactor () {\n    return 5 * Math.round(Math.random() * 100)\n  },\n\n  handleTasksChart () {\n    const self = this\n    const data = {\n      labels: ['21 Mar', '22 Mar', '23 Mar', '24 Mar', '25 Mar', '26 Mar', '27 Mar'],\n      datasets: [{\n        backgroundColor: self.getColor('blue'),\n        borderColor: self.getColor('blue'),\n        borderWidth: 1,\n        data: [\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor(),\n          self.randomScalingFactor()\n        ]\n      }]\n    }\n    // init chart bar\n    const canvas = $('#completion-tasks')[0].getContext('2d')\n    let chart = new Chart(canvas, {\n      type: 'bar',\n      data: data,\n      options: {\n        responsive: true,\n        legend: { display: false },\n        title: { display: false },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display: true,\n              drawBorder: false,\n              drawOnChartArea: false\n            },\n            ticks: {\n              maxRotation: 0,\n              maxTicksLimit: 3\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true,\n              drawBorder: false\n            },\n            ticks: {\n              beginAtZero: true,\n              stepSize: 100\n            }\n          }]\n        }\n      }\n    })\n  },\n\n  handleFlatpickr () {\n    flatpickr('#flatpickr', {\n      inline: true,\n      disableMobile: true,\n      mode: 'range',\n      dateFormat: 'Y-m-d'\n    })\n\n    $('#flatpickr').next().on('click', function (e) {\n      e.stopPropagation()\n    })\n  }\n}\n\ndashboardDemo.init()\n"]}